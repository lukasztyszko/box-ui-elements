(globalThis.webpackChunkbox_ui_elements=globalThis.webpackChunkbox_ui_elements||[]).push([[55912],{"./src/components/tooltip/Tooltip.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,attachedToDisabledButton:()=>attachedToDisabledButton,default:()=>Tooltip_stories,isShown:()=>isShown,positioning:()=>positioning,themes:()=>themes,withCloseButton:()=>withCloseButton,withDisabled:()=>withDisabled,withLongText:()=>withLongText,withOffset:()=>withOffset});__webpack_require__("./node_modules/react/index.js");var dist=__webpack_require__("./node_modules/@storybook/addon-knobs/dist/index.js"),Button=__webpack_require__("./src/components/button/Button.tsx"),Tooltip=__webpack_require__("./src/components/tooltip/Tooltip.tsx");var _positioning$paramete,_positioning$paramete2,_positioning$paramete3,_themes$parameters,_themes$parameters2,_themes$parameters2$d,_withCloseButton$para,_withCloseButton$para2,_withCloseButton$para3,_isShown$parameters,_isShown$parameters2,_isShown$parameters2$,_withOffset$parameter,_withOffset$parameter2,_withOffset$parameter3,_withDisabled$paramet,_withDisabled$paramet2,_withDisabled$paramet3,_attachedToDisabledBu,_attachedToDisabledBu2,_attachedToDisabledBu3,_withLongText$paramet,_withLongText$paramet2,_withLongText$paramet3,jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=typeof t||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==typeof i?i:String(i)}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}const addSpacing=component=>(0,jsx_runtime.jsx)("div",{style:{textAlign:"center",marginTop:"125px",marginBottom:"125px"},children:component});addSpacing.displayName="addSpacing";const positioning=()=>{const positions=Object.values(Tooltip.DU);return addSpacing((0,jsx_runtime.jsx)(Tooltip.ZP,{isShown:!0,position:(0,dist.select)("Positions",positions,Tooltip.DU.TOP_CENTER),text:"tooltips are constrained to window by default so if you scroll until there is no room for this tooltip above the button, it will flip below the button",children:(0,jsx_runtime.jsx)(Button.Z,{children:"Learn more"})}))};positioning.story={name:"Positioning"};const themes=()=>{const themeOptions=Object.values(Tooltip.Ar);return addSpacing((0,jsx_runtime.jsx)(Tooltip.ZP,{isShown:!0,position:Tooltip.DU.TOP_RIGHT,text:"Theme this tooltip",theme:(0,dist.select)("Themes",themeOptions,Tooltip.Ar.DEFAULT),children:(0,jsx_runtime.jsx)(Button.Z,{children:"Learn more"})}))};themes.story={name:"Themes"};const withCloseButton=()=>{const positions=Object.values(Tooltip.DU),themeOptions=Object.values(Tooltip.Ar);return addSpacing((0,jsx_runtime.jsx)(Tooltip.ZP,{isShown:(0,dist.boolean)("isShown",!0),position:(0,dist.select)("Positions",positions,Tooltip.DU.TOP_CENTER),showCloseButton:(0,dist.boolean)("showCloseButton",!0),text:"Tooltips can have a close button and still work even if the text is long and wrapping",theme:(0,dist.select)("Themes",themeOptions,Tooltip.Ar.DEFAULT),children:(0,jsx_runtime.jsx)(Button.Z,{children:"Learn more"})}))};withCloseButton.story={name:"With close button"};const isShown=()=>addSpacing((0,jsx_runtime.jsx)(Tooltip.ZP,{isShown:(0,dist.boolean)("isShown",!0),text:"Force show or hide",children:(0,jsx_runtime.jsx)(Button.Z,{children:"Learn more"})}));isShown.story={name:"Force show and hide"};const withOffset=()=>{const positions=Object.values(Tooltip.DU);return addSpacing((0,jsx_runtime.jsx)(Tooltip.ZP,{isShown:(0,dist.boolean)("isShown",!0),position:(0,dist.select)("Positions",positions,Tooltip.DU.MIDDLE_LEFT),text:"this tooltip has 20px offset",offset:(0,dist.text)("offset","0 20px"),children:(0,jsx_runtime.jsx)(Button.Z,{children:"Learn more"})}))};withOffset.story={name:"With offset"};const withDisabled=()=>addSpacing((0,jsx_runtime.jsx)(Tooltip.ZP,{isDisabled:(0,dist.boolean)("isDisabled",!0),position:Tooltip.DU.MIDDLE_RIGHT,text:"controlled tooltip that is shown based only on the isDisabled prop",children:(0,jsx_runtime.jsx)(Button.Z,{children:"Learn more"})}));withDisabled.story={name:"With disabled tooltip"};const attachedToDisabledButton=()=>addSpacing((0,jsx_runtime.jsx)(Tooltip.ZP,{text:"Tooltip works on disabled buttons",children:(0,jsx_runtime.jsx)(Button.Z,{isDisabled:!0,children:"Save changes"})}));attachedToDisabledButton.story={name:"Attached to disabled button"};const withLongText=()=>addSpacing((0,jsx_runtime.jsx)(Tooltip.ZP,{position:Tooltip.DU.MIDDLE_LEFT,text:"this is a long tooltip that will addSpacing past 200px width, add a tooltipClass to override",children:(0,jsx_runtime.jsx)(Button.Z,{children:"Learn more"})}));withLongText.story={name:"With long tooltip text"};const Tooltip_stories={title:"Components/Tooltip",component:Tooltip.ZP,parameters:{notes:"`import Tooltip from 'box-ui-elements/es/components/tooltip';`\n"}};positioning.parameters=_objectSpread({},positioning.parameters,{docs:_objectSpread({},null===(_positioning$paramete=positioning.parameters)||void 0===_positioning$paramete?void 0:_positioning$paramete.docs,{source:_objectSpread({originalSource:"() => {\n  const positions = Object.values(TooltipPosition);\n  return addSpacing(<Tooltip isShown position={select('Positions', positions, TooltipPosition.TOP_CENTER)} text=\"tooltips are constrained to window by default so if you scroll until there is no room for this tooltip above the button, it will flip below the button\">\n            <Button>Learn more</Button>\n        </Tooltip>);\n}"},null===(_positioning$paramete2=positioning.parameters)||void 0===_positioning$paramete2||null===(_positioning$paramete3=_positioning$paramete2.docs)||void 0===_positioning$paramete3?void 0:_positioning$paramete3.source)})}),themes.parameters=_objectSpread({},themes.parameters,{docs:_objectSpread({},null===(_themes$parameters=themes.parameters)||void 0===_themes$parameters?void 0:_themes$parameters.docs,{source:_objectSpread({originalSource:"() => {\n  const themeOptions = Object.values(TooltipTheme);\n  return addSpacing(<Tooltip isShown position={TooltipPosition.TOP_RIGHT} text=\"Theme this tooltip\" theme={select('Themes', themeOptions, TooltipTheme.DEFAULT)}>\n            <Button>Learn more</Button>\n        </Tooltip>);\n}"},null===(_themes$parameters2=themes.parameters)||void 0===_themes$parameters2||null===(_themes$parameters2$d=_themes$parameters2.docs)||void 0===_themes$parameters2$d?void 0:_themes$parameters2$d.source)})}),withCloseButton.parameters=_objectSpread({},withCloseButton.parameters,{docs:_objectSpread({},null===(_withCloseButton$para=withCloseButton.parameters)||void 0===_withCloseButton$para?void 0:_withCloseButton$para.docs,{source:_objectSpread({originalSource:"() => {\n  const positions = Object.values(TooltipPosition);\n  const themeOptions = Object.values(TooltipTheme);\n  return addSpacing(<Tooltip isShown={boolean('isShown', true)} position={select('Positions', positions, TooltipPosition.TOP_CENTER)} showCloseButton={boolean('showCloseButton', true)} text=\"Tooltips can have a close button and still work even if the text is long and wrapping\" theme={select('Themes', themeOptions, TooltipTheme.DEFAULT)}>\n            <Button>Learn more</Button>\n        </Tooltip>);\n}"},null===(_withCloseButton$para2=withCloseButton.parameters)||void 0===_withCloseButton$para2||null===(_withCloseButton$para3=_withCloseButton$para2.docs)||void 0===_withCloseButton$para3?void 0:_withCloseButton$para3.source)})}),isShown.parameters=_objectSpread({},isShown.parameters,{docs:_objectSpread({},null===(_isShown$parameters=isShown.parameters)||void 0===_isShown$parameters?void 0:_isShown$parameters.docs,{source:_objectSpread({originalSource:"() => addSpacing(<Tooltip isShown={boolean('isShown', true)} text=\"Force show or hide\">\n            <Button>Learn more</Button>\n        </Tooltip>)"},null===(_isShown$parameters2=isShown.parameters)||void 0===_isShown$parameters2||null===(_isShown$parameters2$=_isShown$parameters2.docs)||void 0===_isShown$parameters2$?void 0:_isShown$parameters2$.source)})}),withOffset.parameters=_objectSpread({},withOffset.parameters,{docs:_objectSpread({},null===(_withOffset$parameter=withOffset.parameters)||void 0===_withOffset$parameter?void 0:_withOffset$parameter.docs,{source:_objectSpread({originalSource:"() => {\n  const positions = Object.values(TooltipPosition);\n  return addSpacing(<Tooltip isShown={boolean('isShown', true)} position={select('Positions', positions, TooltipPosition.MIDDLE_LEFT)} text=\"this tooltip has 20px offset\" offset={text('offset', '0 20px')}>\n            <Button>Learn more</Button>\n        </Tooltip>);\n}"},null===(_withOffset$parameter2=withOffset.parameters)||void 0===_withOffset$parameter2||null===(_withOffset$parameter3=_withOffset$parameter2.docs)||void 0===_withOffset$parameter3?void 0:_withOffset$parameter3.source)})}),withDisabled.parameters=_objectSpread({},withDisabled.parameters,{docs:_objectSpread({},null===(_withDisabled$paramet=withDisabled.parameters)||void 0===_withDisabled$paramet?void 0:_withDisabled$paramet.docs,{source:_objectSpread({originalSource:"() => addSpacing(<Tooltip isDisabled={boolean('isDisabled', true)} position={TooltipPosition.MIDDLE_RIGHT} text=\"controlled tooltip that is shown based only on the isDisabled prop\">\n            <Button>Learn more</Button>\n        </Tooltip>)"},null===(_withDisabled$paramet2=withDisabled.parameters)||void 0===_withDisabled$paramet2||null===(_withDisabled$paramet3=_withDisabled$paramet2.docs)||void 0===_withDisabled$paramet3?void 0:_withDisabled$paramet3.source)})}),attachedToDisabledButton.parameters=_objectSpread({},attachedToDisabledButton.parameters,{docs:_objectSpread({},null===(_attachedToDisabledBu=attachedToDisabledButton.parameters)||void 0===_attachedToDisabledBu?void 0:_attachedToDisabledBu.docs,{source:_objectSpread({originalSource:'() => addSpacing(<Tooltip text="Tooltip works on disabled buttons">\n            <Button isDisabled>Save changes</Button>\n        </Tooltip>)'},null===(_attachedToDisabledBu2=attachedToDisabledButton.parameters)||void 0===_attachedToDisabledBu2||null===(_attachedToDisabledBu3=_attachedToDisabledBu2.docs)||void 0===_attachedToDisabledBu3?void 0:_attachedToDisabledBu3.source)})}),withLongText.parameters=_objectSpread({},withLongText.parameters,{docs:_objectSpread({},null===(_withLongText$paramet=withLongText.parameters)||void 0===_withLongText$paramet?void 0:_withLongText$paramet.docs,{source:_objectSpread({originalSource:'() => addSpacing(<Tooltip position={TooltipPosition.MIDDLE_LEFT} text="this is a long tooltip that will addSpacing past 200px width, add a tooltipClass to override">\n            <Button>Learn more</Button>\n        </Tooltip>)'},null===(_withLongText$paramet2=withLongText.parameters)||void 0===_withLongText$paramet2||null===(_withLongText$paramet3=_withLongText$paramet2.docs)||void 0===_withLongText$paramet3?void 0:_withLongText$paramet3.source)})});const __namedExportsOrder=["positioning","themes","withCloseButton","isShown","withOffset","withDisabled","attachedToDisabledButton","withLongText"]},"./node_modules/lodash/get.js":(module,__unused_webpack_exports,__webpack_require__)=>{var baseGet=__webpack_require__("./node_modules/lodash/_baseGet.js");module.exports=function get(object,path,defaultValue){var result=null==object?void 0:baseGet(object,path);return void 0===result?defaultValue:result}},"./node_modules/lodash/noop.js":module=>{module.exports=function noop(){}},"./node_modules/react-intl/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Ji:()=>FormattedDate,BK:()=>FormattedNumber,vU:()=>defineMessages});var DisplayName,DisplayNameParts,tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),react=__webpack_require__("./node_modules/react/index.js"),components_useIntl=__webpack_require__("./node_modules/react-intl/lib/src/components/useIntl.js");!function(DisplayName){DisplayName.formatDate="FormattedDate",DisplayName.formatTime="FormattedTime",DisplayName.formatNumber="FormattedNumber",DisplayName.formatList="FormattedList",DisplayName.formatDisplayName="FormattedDisplayName"}(DisplayName||(DisplayName={})),function(DisplayNameParts){DisplayNameParts.formatDate="FormattedDateParts",DisplayNameParts.formatTime="FormattedTimeParts",DisplayNameParts.formatNumber="FormattedNumberParts",DisplayNameParts.formatList="FormattedListParts"}(DisplayNameParts||(DisplayNameParts={}));var FormattedNumberParts=function(props){var intl=(0,components_useIntl.Z)(),value=props.value,children=props.children,formatProps=(0,tslib_es6._T)(props,["value","children"]);return children(intl.formatNumberToParts(value,formatProps))};FormattedNumberParts.displayName="FormattedNumberParts";function createFormattedDateTimePartsComponent(name){var ComponentParts=function(props){var intl=(0,components_useIntl.Z)(),value=props.value,children=props.children,formatProps=(0,tslib_es6._T)(props,["value","children"]),date="string"==typeof value?new Date(value||0):value;return children("formatDate"===name?intl.formatDateToParts(date,formatProps):intl.formatTimeToParts(date,formatProps))};return ComponentParts.displayName=DisplayNameParts[name],ComponentParts}function createFormattedComponent(name){var Component=function(props){var intl=(0,components_useIntl.Z)(),value=props.value,children=props.children,formatProps=(0,tslib_es6._T)(props,["value","children"]),formattedValue=intl[name](value,formatProps);if("function"==typeof children)return children(formattedValue);var Text=intl.textComponent||react.Fragment;return react.createElement(Text,null,formattedValue)};return Component.displayName=DisplayName[name],Component}function defineMessages(msgs){return msgs}FormattedNumberParts.displayName="FormattedNumberParts";var FormattedDate=createFormattedComponent("formatDate"),FormattedNumber=(createFormattedComponent("formatTime"),createFormattedComponent("formatNumber"));createFormattedComponent("formatList"),createFormattedComponent("formatDisplayName"),createFormattedDateTimePartsComponent("formatDate"),createFormattedDateTimePartsComponent("formatTime")},"./node_modules/react-intl/lib/src/components/useIntl.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>useIntl});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_injectIntl__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react-intl/lib/src/components/injectIntl.js"),_utils__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react-intl/lib/src/utils.js");function useIntl(){var intl=react__WEBPACK_IMPORTED_MODULE_0__.useContext(_injectIntl__WEBPACK_IMPORTED_MODULE_1__._y);return(0,_utils__WEBPACK_IMPORTED_MODULE_2__.lq)(intl),intl}}}]);