(globalThis.webpackChunkbox_ui_elements=globalThis.webpackChunkbox_ui_elements||[]).push([[90683],{"./src/features/unified-share-modal/stories/UnifiedShareModal.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,basic:()=>basic,default:()=>UnifiedShareModal_stories,withAutofocusedSharedLink:()=>withAutofocusedSharedLink,withFormOnly:()=>withFormOnly,withSharedLink:()=>withSharedLink});__webpack_require__("./node_modules/react/index.js");var provider=__webpack_require__("./node_modules/react-intl/lib/src/components/provider.js"),dist=__webpack_require__("./node_modules/@sambego/storybook-state/dist/index.js"),Button=__webpack_require__("./src/components/button/Button.tsx"),UnifiedShareModal=__webpack_require__("./src/features/unified-share-modal/UnifiedShareModal.js");var _basic$parameters,_basic$parameters2,_basic$parameters2$do,_withSharedLink$param,_withSharedLink$param2,_withSharedLink$param3,_withAutofocusedShare,_withAutofocusedShare2,_withAutofocusedShare3,_withFormOnly$paramet,_withFormOnly$paramet2,_withFormOnly$paramet3,constants=__webpack_require__("./src/features/unified-share-modal/constants.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=typeof t||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==typeof i?i:String(i)}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}const DEFAULT_SHARED_LINK_STATE={accessLevel:"",allowedAccessLevels:{},canChangeAccessLevel:!0,enterpriseName:"",expirationTimestamp:null,isDownloadSettingAvailable:!0,isNewSharedLink:!1,permissionLevel:"",url:""},INITIAL_STATE={isConfirmModalOpen:!1,isOpen:!1,item:{bannerPolicy:{body:"test"},canUserSeeClassification:!0,classification:"internal",grantedPermissions:{itemShare:!0},hideCollaborators:!1,id:12345,name:"My Example Folder",type:"folder",typedID:"d_12345"},collaboratorsList:{collaborators:[]},selectorOptions:[],sharedLink:DEFAULT_SHARED_LINK_STATE,submitting:!1},contacts=[{id:"0",collabID:0,name:"Jackie",email:"j@example.com",type:"user",hasCustomAvatar:!1,translatedRole:"Owner",userID:"0",profileURL:"https://foo.bar"},{id:"1",collabID:"1",name:"Jeff",email:"jt@example.com",type:"user",hasCustomAvatar:!1,translatedRole:"Viewer",userID:"1"},{id:"2",collabID:"2",name:"David",email:"dt@example.com",type:"user",hasCustomAvatar:!1,translatedRole:"Editor",userID:"2"},{id:"3",collabID:"3",name:"Yang",email:"yz@example.com",type:"user",hasCustomAvatar:!1,translatedRole:"Editor",userID:"3"},{id:"4",collabID:"4",name:"Yong",email:"ysu@example.com",type:"user",hasCustomAvatar:!1,translatedRole:"Editor",userID:"4"},{id:"5",collabID:"5",name:"Will",email:"wy@example.com",type:"pending",hasCustomAvatar:!1,translatedRole:"Editor",userID:"5"},{id:"6",collabID:"6",name:"Dave",email:"d@example.com",type:"user",hasCustomAvatar:!1,translatedRole:"Editor",userID:"6"},{id:"7",collabID:"7",name:"Ke",email:"k@example.com",isExternalUser:!0,type:"user",hasCustomAvatar:!1,translatedRole:"Editor",userID:"7"},{id:"8",collabID:"8",name:"Wenbo",email:"w@example.com",type:"user",hasCustomAvatar:!1,translatedRole:"Editor",userID:"8"},{id:"11",collabID:"11",name:"Supersupersupersuperreallyreallyreallylongfirstname incrediblyspectacularlylonglastname",email:"Supersupersupersuperreallyreallyreallyincrediblyspectacularlylongemail@example.com",type:"user",hasCustomAvatar:!1,translatedRole:"Editor",userID:"11"},{id:"14",collabID:"14",type:"group",name:"my group",hasCustomAvatar:!1,translatedRole:"Viewer",userID:null}],createComponentStore=()=>new dist.yh(INITIAL_STATE),basic=()=>{const componentStore=createComponentStore(),closeModal=()=>{componentStore.set({isOpen:!1,sharedLink:DEFAULT_SHARED_LINK_STATE,collaboratorsList:{collaborators:[]}})},fakeRequest=()=>(componentStore.set({submitting:!0}),new Promise((resolve=>{setTimeout((()=>{componentStore.set({submitting:!1}),resolve()}),500)}))),getInitialData=()=>{const initialPromise=fakeRequest(),fetchCollaborators=new Promise((resolved=>{setTimeout((()=>{const collaboratorsList={collaborators:contacts.slice().map((contact=>({collabID:1234,email:contact.email,id:contact.id,name:contact.name||"",type:"group"!==contact.type?constants.Id:constants.F_,isExternalCollab:contact.isExternalUser||!1,userID:parseInt(contact.id,10),expiration:{executeAt:contact.isExternalUser?"November 27, 2022":""},hasCustomAvatar:!1,imageURL:null})))};componentStore.set({collaboratorsList}),resolved()}),1e3)}));return Promise.all([initialPromise,fetchCollaborators])};return(0,jsx_runtime.jsx)(dist.ZM,{store:componentStore,children:state=>(0,jsx_runtime.jsx)(provider.Z,{locale:"en",children:(0,jsx_runtime.jsxs)("div",{children:[state.isOpen&&(0,jsx_runtime.jsx)(UnifiedShareModal.Z,{canInvite:!0,changeSharedLinkAccessLevel:newLevel=>fakeRequest().then((()=>componentStore.set({sharedLink:_objectSpread({},state.sharedLink,{accessLevel:newLevel})}))),changeSharedLinkPermissionLevel:newLevel=>fakeRequest().then((()=>componentStore.set({sharedLink:_objectSpread({},state.sharedLink,{permissionLevel:newLevel})}))),collaboratorsList:state.collaboratorsList,collaborationRestrictionWarning:"Collaboration invitations can only be sent to people within Box Corporate",currentUserID:"0",getCollaboratorContacts:()=>Promise.resolve(contacts),getSharedLinkContacts:()=>Promise.resolve(contacts),getInitialData,inviteePermissions:[{default:!1,text:"Co-owner",value:"Co-owner"},{default:!0,text:"Editor",value:"Editor"},{default:!1,text:"Viewer Uploader",value:"Viewer Uploader"},{default:!1,text:"Previewer Uploader",value:"Previewer Uploader"},{default:!1,text:"Viewer",value:"Viewer"},{default:!1,text:"Previewer",value:"Previewer"},{default:!1,text:"Uploader",value:"Uploader"}],isOpen:state.isOpen,isToggleEnabled:!0,item:state.item,onAddLink:()=>{fakeRequest().then((()=>{componentStore.set({sharedLink:{accessLevel:"peopleInYourCompany",allowedAccessLevels:{peopleWithTheLink:!0,peopleInYourCompany:!0,peopleInThisItem:!0},canChangeAccessLevel:!0,enterpriseName:"Box",expirationTimestamp:1509173940,isDownloadSettingAvailable:!0,isNewSharedLink:!0,permissionLevel:"canViewDownload",url:"https://box.com/s/abcdefg"}})}))},onRemoveLink:()=>{fakeRequest().then((()=>{componentStore.set({sharedLink:DEFAULT_SHARED_LINK_STATE}),closeModal()}))},onRequestClose:closeModal,onSettingsClick:()=>alert("hi!"),recommendedSharingTooltipCalloutName:"",sendInvites:()=>fakeRequest().then((()=>{closeModal()})),sendInvitesError:"",sendSharedLink:()=>fakeRequest().then((()=>{closeModal()})),sendSharedLinkError:"",sharedLink:state.sharedLink,showCalloutForUser:!0,showUpgradeOptions:!0,submitting:state.submitting,suggestedCollaborators:{2:{id:"2",userScore:.1,name:"David",email:"dt@example.com",type:"user"},5:{id:"5",userScore:.2,name:"Will",email:"wy@example.com",type:"user"},1:{id:"1",userScore:.5,name:"Jeff",email:"jt@example.com",type:"user"},3:{id:"3",userScore:2,name:"Yang",email:"yz@example.com",type:"user"}},trackingProps:{collaboratorListTracking:{},inviteCollabsEmailTracking:{},inviteCollabTracking:{},modalTracking:{},removeLinkConfirmModalTracking:{},sharedLinkEmailTracking:{},sharedLinkTracking:{}}}),(0,jsx_runtime.jsx)(Button.Z,{onClick:()=>componentStore.set({isOpen:!0}),children:"Open USM Modal"})]})})})};basic.displayName="basic";const withSharedLink=()=>{const componentStore=createComponentStore(),closeModal=()=>{componentStore.set({isOpen:!1,sharedLink:DEFAULT_SHARED_LINK_STATE,collaboratorsList:{collaborators:[]}})},fakeRequest=()=>(componentStore.set({submitting:!0}),new Promise((resolve=>{setTimeout((()=>{componentStore.set({submitting:!1}),resolve()}),500)}))),getInitialData=()=>{const resolveSharedLink=new Promise((resolved=>{setTimeout((()=>{componentStore.set({sharedLink:{accessLevel:"peopleInYourCompany",allowedAccessLevels:{peopleWithTheLink:!0,peopleInYourCompany:!0,peopleInThisItem:!0},canChangeAccessLevel:!0,enterpriseName:"Box",expirationTimestamp:1509173940,isDownloadSettingAvailable:!0,permissionLevel:"canViewDownload",url:"https://box.com/s/abcdefg"}}),resolved()}),400)}));return Promise.all([fakeRequest,resolveSharedLink])};return(0,jsx_runtime.jsx)(dist.ZM,{store:componentStore,children:state=>(0,jsx_runtime.jsx)(provider.Z,{locale:"en",children:(0,jsx_runtime.jsxs)("div",{children:[state.isOpen&&(0,jsx_runtime.jsx)(UnifiedShareModal.Z,{canInvite:!0,changeSharedLinkAccessLevel:newLevel=>fakeRequest().then((()=>componentStore.set({sharedLink:_objectSpread({},state.sharedLink,{accessLevel:newLevel})}))),changeSharedLinkPermissionLevel:newLevel=>fakeRequest().then((()=>componentStore.set({sharedLink:_objectSpread({},state.sharedLink,{permissionLevel:newLevel})}))),collaboratorsList:state.collaboratorsList,collaborationRestrictionWarning:"Collaboration invitations can only be sent to people within Box Corporate",currentUserID:"0",focusSharedLinkOnLoad:!1,getCollaboratorContacts:()=>Promise.resolve(contacts),getSharedLinkContacts:()=>Promise.resolve(contacts),getInitialData,inviteePermissions:[{default:!1,text:"Co-owner",value:"Co-owner"},{default:!0,text:"Editor",value:"Editor"},{default:!1,text:"Viewer Uploader",value:"Viewer Uploader"},{default:!1,text:"Previewer Uploader",value:"Previewer Uploader"},{default:!1,text:"Viewer",value:"Viewer"},{default:!1,text:"Previewer",value:"Previewer"},{default:!1,text:"Uploader",value:"Uploader"}],isOpen:state.isOpen,isToggleEnabled:!0,item:state.item,onAddLink:()=>{fakeRequest().then((()=>{componentStore.set({sharedLink:{accessLevel:"peopleInYourCompany",allowedAccessLevels:{peopleWithTheLink:!0,peopleInYourCompany:!0,peopleInThisItem:!0},canChangeAccessLevel:!0,enterpriseName:"Box",expirationTimestamp:1509173940,isDownloadSettingAvailable:!0,isNewSharedLink:!0,permissionLevel:"canViewDownload",url:"https://box.com/s/abcdefg"}})}))},onRemoveLink:()=>{fakeRequest().then((()=>{componentStore.set({sharedLink:DEFAULT_SHARED_LINK_STATE}),closeModal()}))},onRequestClose:closeModal,onSettingsClick:()=>alert("hi!"),recommendedSharingTooltipCalloutName:"",sendInvites:()=>fakeRequest().then((()=>{closeModal()})),sendInvitesError:"",sendSharedLink:()=>fakeRequest().then((()=>{closeModal()})),sendSharedLinkError:"",sharedLink:state.sharedLink,showCalloutForUser:!0,showUpgradeOptions:!0,submitting:state.submitting,suggestedCollaborators:{2:{id:"2",userScore:.1,name:"David",email:"dt@example.com",type:"user"},5:{id:"5",userScore:.2,name:"Will",email:"wy@example.com",type:"user"},1:{id:"1",userScore:.5,name:"Jeff",email:"jt@example.com",type:"user"},3:{id:"3",userScore:2,name:"Yang",email:"yz@example.com",type:"user"}},trackingProps:{collaboratorListTracking:{},inviteCollabsEmailTracking:{},inviteCollabTracking:{},modalTracking:{},removeLinkConfirmModalTracking:{},sharedLinkEmailTracking:{},sharedLinkTracking:{}}}),(0,jsx_runtime.jsx)(Button.Z,{onClick:()=>componentStore.set({isOpen:!0}),children:"Open USM Modal"})]})})})};withSharedLink.displayName="withSharedLink";const withAutofocusedSharedLink=()=>{const componentStore=createComponentStore(),closeModal=()=>{componentStore.set({isOpen:!1,sharedLink:DEFAULT_SHARED_LINK_STATE,collaboratorsList:{collaborators:[]}})},fakeRequest=()=>(componentStore.set({submitting:!0}),new Promise((resolve=>{setTimeout((()=>{componentStore.set({submitting:!1}),resolve()}),500)}))),getInitialData=()=>{const resolveSharedLink=new Promise((resolved=>{setTimeout((()=>{componentStore.set({sharedLink:{accessLevel:"peopleInYourCompany",allowedAccessLevels:{peopleWithTheLink:!0,peopleInYourCompany:!0,peopleInThisItem:!0},canChangeAccessLevel:!0,enterpriseName:"Box",expirationTimestamp:1509173940,isDownloadSettingAvailable:!0,permissionLevel:"canViewDownload",url:"https://box.com/s/abcdefg"}}),resolved()}),400)}));return Promise.all([fakeRequest,resolveSharedLink])};return(0,jsx_runtime.jsx)(dist.ZM,{store:componentStore,children:state=>(0,jsx_runtime.jsx)(provider.Z,{locale:"en",children:(0,jsx_runtime.jsxs)("div",{children:[state.isOpen&&(0,jsx_runtime.jsx)(UnifiedShareModal.Z,{canInvite:!0,changeSharedLinkAccessLevel:newLevel=>fakeRequest().then((()=>componentStore.set({sharedLink:_objectSpread({},state.sharedLink,{accessLevel:newLevel})}))),changeSharedLinkPermissionLevel:newLevel=>fakeRequest().then((()=>componentStore.set({sharedLink:_objectSpread({},state.sharedLink,{permissionLevel:newLevel})}))),collaboratorsList:state.collaboratorsList,collaborationRestrictionWarning:"Collaboration invitations can only be sent to people within Box Corporate",currentUserID:"0",focusSharedLinkOnLoad:!0,getCollaboratorContacts:()=>Promise.resolve(contacts),getSharedLinkContacts:()=>Promise.resolve(contacts),getInitialData,inviteePermissions:[{default:!1,text:"Co-owner",value:"Co-owner"},{default:!0,text:"Editor",value:"Editor"},{default:!1,text:"Viewer Uploader",value:"Viewer Uploader"},{default:!1,text:"Previewer Uploader",value:"Previewer Uploader"},{default:!1,text:"Viewer",value:"Viewer"},{default:!1,text:"Previewer",value:"Previewer"},{default:!1,text:"Uploader",value:"Uploader"}],isOpen:state.isOpen,isToggleEnabled:!0,item:state.item,onAddLink:()=>{fakeRequest().then((()=>{componentStore.set({sharedLink:{accessLevel:"peopleInYourCompany",allowedAccessLevels:{peopleWithTheLink:!0,peopleInYourCompany:!0,peopleInThisItem:!0},canChangeAccessLevel:!0,enterpriseName:"Box",expirationTimestamp:1509173940,isDownloadSettingAvailable:!0,isNewSharedLink:!0,permissionLevel:"canViewDownload",url:"https://box.com/s/abcdefg"}})}))},onRemoveLink:()=>{fakeRequest().then((()=>{componentStore.set({sharedLink:DEFAULT_SHARED_LINK_STATE}),closeModal()}))},onRequestClose:closeModal,onSettingsClick:()=>alert("hi!"),recommendedSharingTooltipCalloutName:"",sendInvites:()=>fakeRequest().then((()=>{closeModal()})),sendInvitesError:"",sendSharedLink:()=>fakeRequest().then((()=>{closeModal()})),sendSharedLinkError:"",sharedLink:state.sharedLink,showCalloutForUser:!0,showUpgradeOptions:!0,submitting:state.submitting,suggestedCollaborators:{2:{id:"2",userScore:.1,name:"David",email:"dt@example.com",type:"user"},5:{id:"5",userScore:.2,name:"Will",email:"wy@example.com",type:"user"},1:{id:"1",userScore:.5,name:"Jeff",email:"jt@example.com",type:"user"},3:{id:"3",userScore:2,name:"Yang",email:"yz@example.com",type:"user"}},trackingProps:{collaboratorListTracking:{},inviteCollabsEmailTracking:{},inviteCollabTracking:{},modalTracking:{},removeLinkConfirmModalTracking:{},sharedLinkEmailTracking:{},sharedLinkTracking:{}}}),(0,jsx_runtime.jsx)(Button.Z,{onClick:()=>componentStore.set({isOpen:!0}),children:"Open USM Modal"})]})})})};withAutofocusedSharedLink.displayName="withAutofocusedSharedLink";const withFormOnly=()=>{const componentStore=createComponentStore(),fakeRequest=()=>(componentStore.set({submitting:!0}),new Promise((resolve=>{setTimeout((()=>{componentStore.set({submitting:!1}),resolve()}),500)}))),getInitialData=()=>{const initialPromise=fakeRequest(),fetchCollaborators=new Promise((resolved=>{setTimeout((()=>{const collaboratorsList={collaborators:contacts.slice()};componentStore.set({collaboratorsList}),resolved()}),1e3)}));return Promise.all([initialPromise,fetchCollaborators])};return(0,jsx_runtime.jsx)(dist.ZM,{store:componentStore,children:state=>(0,jsx_runtime.jsx)(provider.Z,{locale:"en",children:(0,jsx_runtime.jsx)(UnifiedShareModal.Z,{canInvite:!0,changeSharedLinkAccessLevel:newLevel=>fakeRequest().then((()=>componentStore.set({sharedLink:_objectSpread({},state.sharedLink,{accessLevel:newLevel})}))),changeSharedLinkPermissionLevel:newLevel=>fakeRequest().then((()=>componentStore.set({sharedLink:_objectSpread({},state.sharedLink,{permissionLevel:newLevel})}))),collaboratorsList:state.collaboratorsList,collaborationRestrictionWarning:"Collaboration invitations can only be sent to people within Box Corporate",currentUserID:"0",displayInModal:!1,getCollaboratorContacts:()=>Promise.resolve(contacts),getSharedLinkContacts:()=>Promise.resolve(contacts),getInitialData,inviteePermissions:[{default:!1,text:"Co-owner",value:"Co-owner"},{default:!0,text:"Editor",value:"Editor"},{default:!1,text:"Viewer Uploader",value:"Viewer Uploader"},{default:!1,text:"Previewer Uploader",value:"Previewer Uploader"},{default:!1,text:"Viewer",value:"Viewer"},{default:!1,text:"Previewer",value:"Previewer"},{default:!1,text:"Uploader",value:"Uploader"}],isOpen:state.isOpen,isToggleEnabled:!0,item:state.item,onAddLink:()=>{fakeRequest().then((()=>{componentStore.set({sharedLink:{accessLevel:"peopleInYourCompany",allowedAccessLevels:{peopleWithTheLink:!0,peopleInYourCompany:!0,peopleInThisItem:!0},canChangeAccessLevel:!0,enterpriseName:"Box",expirationTimestamp:1509173940,isDownloadSettingAvailable:!0,isNewSharedLink:!0,permissionLevel:"canViewDownload",url:"https://box.com/s/abcdefg"}})}))},onRemoveLink:()=>{fakeRequest().then((()=>{componentStore.set({sharedLink:DEFAULT_SHARED_LINK_STATE}),console.log("removed link")}))},onSettingsClick:()=>alert("hi!"),recommendedSharingTooltipCalloutName:"",sendInvites:()=>fakeRequest().then((()=>{console.log("sent invites")})),sendInvitesError:"",sendSharedLink:()=>fakeRequest().then((()=>{console.log("sent shared link")})),sendSharedLinkError:"",sharedLink:state.sharedLink,showCalloutForUser:!0,showFormOnly:!0,showUpgradeOptions:!0,submitting:state.submitting,suggestedCollaborators:{2:{id:"2",userScore:.1,name:"David",email:"dt@example.com",type:"user"},5:{id:"5",userScore:.2,name:"Will",email:"wy@example.com",type:"user"},1:{id:"1",userScore:.5,name:"Jeff",email:"jt@example.com",type:"user"},3:{id:"3",userScore:2,name:"Yang",email:"yz@example.com",type:"user"}},trackingProps:{collaboratorListTracking:{},inviteCollabsEmailTracking:{},inviteCollabTracking:{},modalTracking:{},removeLinkConfirmModalTracking:{},sharedLinkEmailTracking:{},sharedLinkTracking:{}}})})})};withFormOnly.displayName="withFormOnly";const UnifiedShareModal_stories={title:"Features/UnifiedShareModal",component:UnifiedShareModal.Z,parameters:{notes:"`import UnifiedShareModal from 'box-ui-elements/es/features/unified-share-modal/UnifiedShareModal';`\n\nThe `UnifiedShareModal` includes a modal wrapper with a form (the `UnifiedShareForm`) by default. To render the form without the wrapper, set the `showFormOnly` prop to `true`.\n"}};basic.parameters=_objectSpread({},basic.parameters,{docs:_objectSpread({},null===(_basic$parameters=basic.parameters)||void 0===_basic$parameters?void 0:_basic$parameters.docs,{source:_objectSpread({originalSource:"() => {\n  const componentStore = createComponentStore();\n  const closeModal = () => {\n    componentStore.set({\n      isOpen: false,\n      sharedLink: DEFAULT_SHARED_LINK_STATE,\n      collaboratorsList: {\n        collaborators: []\n      }\n    });\n  };\n  const fakeRequest = () => {\n    // submitting is used to disable input fields, and not to show the loading indicator\n    componentStore.set({\n      submitting: true\n    });\n    return new Promise(resolve => {\n      setTimeout(() => {\n        componentStore.set({\n          submitting: false\n        });\n        resolve();\n      }, 500);\n    });\n  };\n  const getInitialData = () => {\n    const initialPromise = fakeRequest();\n    const fetchCollaborators = new Promise(resolved => {\n      setTimeout(() => {\n        const collaborators: Array<collaboratorType> = contacts.slice().map(contact => {\n          // convert the existing contact entries to compatible collaborator entries in this example\n          const collaborator: collaboratorType = {\n            collabID: 1234,\n            email: contact.email,\n            id: contact.id,\n            name: contact.name || '',\n            type: contact.type !== 'group' ? constants.COLLAB_USER_TYPE : constants.COLLAB_GROUP_TYPE,\n            isExternalCollab: contact.isExternalUser || false,\n            userID: parseInt(contact.id, 10),\n            expiration: {\n              executeAt: contact.isExternalUser ? 'November 27, 2022' : ''\n            },\n            hasCustomAvatar: false,\n            imageURL: null\n          };\n          return collaborator;\n        });\n        const collaboratorsList = {\n          collaborators\n        };\n        componentStore.set({\n          collaboratorsList\n        });\n        resolved();\n      }, 1000);\n    });\n    return Promise.all([initialPromise, fetchCollaborators]);\n  };\n  return <State store={componentStore}>\n            {state => <IntlProvider locale=\"en\">\n                    <div>\n                        {state.isOpen && <UnifiedShareModal canInvite changeSharedLinkAccessLevel={newLevel => {\n          return fakeRequest().then(() => {\n            return componentStore.set({\n              sharedLink: {\n                ...state.sharedLink,\n                accessLevel: newLevel\n              }\n            });\n          });\n        }} changeSharedLinkPermissionLevel={newLevel => {\n          return fakeRequest().then(() => {\n            return componentStore.set({\n              sharedLink: {\n                ...state.sharedLink,\n                permissionLevel: newLevel\n              }\n            });\n          });\n        }} collaboratorsList={state.collaboratorsList} collaborationRestrictionWarning=\"Collaboration invitations can only be sent to people within Box Corporate\" currentUserID=\"0\" getCollaboratorContacts={() => {\n          return Promise.resolve(contacts);\n        }} getSharedLinkContacts={() => {\n          return Promise.resolve(contacts);\n        }} getInitialData={getInitialData} inviteePermissions={[{\n          default: false,\n          text: 'Co-owner',\n          value: 'Co-owner'\n        }, {\n          default: true,\n          text: 'Editor',\n          value: 'Editor'\n        }, {\n          default: false,\n          text: 'Viewer Uploader',\n          value: 'Viewer Uploader'\n        }, {\n          default: false,\n          text: 'Previewer Uploader',\n          value: 'Previewer Uploader'\n        }, {\n          default: false,\n          text: 'Viewer',\n          value: 'Viewer'\n        }, {\n          default: false,\n          text: 'Previewer',\n          value: 'Previewer'\n        }, {\n          default: false,\n          text: 'Uploader',\n          value: 'Uploader'\n        }]} isOpen={state.isOpen} isToggleEnabled item={state.item} onAddLink={() => {\n          fakeRequest().then(() => {\n            componentStore.set({\n              sharedLink: {\n                accessLevel: 'peopleInYourCompany',\n                allowedAccessLevels: {\n                  peopleWithTheLink: true,\n                  peopleInYourCompany: true,\n                  peopleInThisItem: true\n                },\n                canChangeAccessLevel: true,\n                enterpriseName: 'Box',\n                expirationTimestamp: 1509173940,\n                isDownloadSettingAvailable: true,\n                isNewSharedLink: true,\n                permissionLevel: 'canViewDownload',\n                url: 'https://box.com/s/abcdefg'\n              }\n            });\n          });\n        }} onRemoveLink={() => {\n          fakeRequest().then(() => {\n            componentStore.set({\n              sharedLink: DEFAULT_SHARED_LINK_STATE\n            });\n            closeModal();\n          });\n        }} onRequestClose={closeModal}\n        /* eslint-disable-next-line no-alert */ onSettingsClick={() => alert('hi!')} recommendedSharingTooltipCalloutName=\"\" sendInvites={() => fakeRequest().then(() => {\n          closeModal();\n        })} sendInvitesError=\"\" sendSharedLink={() => fakeRequest().then(() => {\n          closeModal();\n        })} sendSharedLinkError=\"\" sharedLink={state.sharedLink} showCalloutForUser showUpgradeOptions submitting={state.submitting} suggestedCollaborators={{\n          '2': {\n            id: '2',\n            userScore: 0.1,\n            name: 'David',\n            email: 'dt@example.com',\n            type: 'user'\n          },\n          '5': {\n            id: '5',\n            userScore: 0.2,\n            name: 'Will',\n            email: 'wy@example.com',\n            type: 'user'\n          },\n          '1': {\n            id: '1',\n            userScore: 0.5,\n            name: 'Jeff',\n            email: 'jt@example.com',\n            type: 'user'\n          },\n          '3': {\n            id: '3',\n            userScore: 2,\n            name: 'Yang',\n            email: 'yz@example.com',\n            type: 'user'\n          }\n        }} trackingProps={{\n          collaboratorListTracking: {},\n          inviteCollabsEmailTracking: {},\n          inviteCollabTracking: {},\n          modalTracking: {},\n          removeLinkConfirmModalTracking: {},\n          sharedLinkEmailTracking: {},\n          sharedLinkTracking: {}\n        }} />}\n                        <Button onClick={() => componentStore.set({\n          isOpen: true\n        })}>\n                            Open USM Modal\n                        </Button>\n                    </div>\n                </IntlProvider>}\n        </State>;\n}"},null===(_basic$parameters2=basic.parameters)||void 0===_basic$parameters2||null===(_basic$parameters2$do=_basic$parameters2.docs)||void 0===_basic$parameters2$do?void 0:_basic$parameters2$do.source)})}),withSharedLink.parameters=_objectSpread({},withSharedLink.parameters,{docs:_objectSpread({},null===(_withSharedLink$param=withSharedLink.parameters)||void 0===_withSharedLink$param?void 0:_withSharedLink$param.docs,{source:_objectSpread({originalSource:"() => {\n  const componentStore = createComponentStore();\n  const closeModal = () => {\n    componentStore.set({\n      isOpen: false,\n      sharedLink: DEFAULT_SHARED_LINK_STATE,\n      collaboratorsList: {\n        collaborators: []\n      }\n    });\n  };\n  const fakeRequest = () => {\n    // submitting is used to disable input fields, and not to show the loading indicator\n    componentStore.set({\n      submitting: true\n    });\n    return new Promise(resolve => {\n      setTimeout(() => {\n        componentStore.set({\n          submitting: false\n        });\n        resolve();\n      }, 500);\n    });\n  };\n  const getInitialData = () => {\n    const resolveSharedLink = new Promise(resolved => {\n      setTimeout(() => {\n        componentStore.set({\n          sharedLink: {\n            accessLevel: 'peopleInYourCompany',\n            allowedAccessLevels: {\n              peopleWithTheLink: true,\n              peopleInYourCompany: true,\n              peopleInThisItem: true\n            },\n            canChangeAccessLevel: true,\n            enterpriseName: 'Box',\n            expirationTimestamp: 1509173940,\n            isDownloadSettingAvailable: true,\n            permissionLevel: 'canViewDownload',\n            url: 'https://box.com/s/abcdefg'\n          }\n        });\n        resolved();\n      }, 400);\n    });\n    return Promise.all([fakeRequest, resolveSharedLink]);\n  };\n  return <State store={componentStore}>\n            {state => <IntlProvider locale=\"en\">\n                    <div>\n                        {state.isOpen && <UnifiedShareModal canInvite changeSharedLinkAccessLevel={newLevel => {\n          return fakeRequest().then(() => {\n            return componentStore.set({\n              sharedLink: {\n                ...state.sharedLink,\n                accessLevel: newLevel\n              }\n            });\n          });\n        }} changeSharedLinkPermissionLevel={newLevel => {\n          return fakeRequest().then(() => {\n            return componentStore.set({\n              sharedLink: {\n                ...state.sharedLink,\n                permissionLevel: newLevel\n              }\n            });\n          });\n        }} collaboratorsList={state.collaboratorsList} collaborationRestrictionWarning=\"Collaboration invitations can only be sent to people within Box Corporate\" currentUserID=\"0\" focusSharedLinkOnLoad={false} getCollaboratorContacts={() => {\n          return Promise.resolve(contacts);\n        }} getSharedLinkContacts={() => {\n          return Promise.resolve(contacts);\n        }} getInitialData={getInitialData} inviteePermissions={[{\n          default: false,\n          text: 'Co-owner',\n          value: 'Co-owner'\n        }, {\n          default: true,\n          text: 'Editor',\n          value: 'Editor'\n        }, {\n          default: false,\n          text: 'Viewer Uploader',\n          value: 'Viewer Uploader'\n        }, {\n          default: false,\n          text: 'Previewer Uploader',\n          value: 'Previewer Uploader'\n        }, {\n          default: false,\n          text: 'Viewer',\n          value: 'Viewer'\n        }, {\n          default: false,\n          text: 'Previewer',\n          value: 'Previewer'\n        }, {\n          default: false,\n          text: 'Uploader',\n          value: 'Uploader'\n        }]} isOpen={state.isOpen} isToggleEnabled item={state.item} onAddLink={() => {\n          fakeRequest().then(() => {\n            componentStore.set({\n              sharedLink: {\n                accessLevel: 'peopleInYourCompany',\n                allowedAccessLevels: {\n                  peopleWithTheLink: true,\n                  peopleInYourCompany: true,\n                  peopleInThisItem: true\n                },\n                canChangeAccessLevel: true,\n                enterpriseName: 'Box',\n                expirationTimestamp: 1509173940,\n                isDownloadSettingAvailable: true,\n                isNewSharedLink: true,\n                permissionLevel: 'canViewDownload',\n                url: 'https://box.com/s/abcdefg'\n              }\n            });\n          });\n        }} onRemoveLink={() => {\n          fakeRequest().then(() => {\n            componentStore.set({\n              sharedLink: DEFAULT_SHARED_LINK_STATE\n            });\n            closeModal();\n          });\n        }} onRequestClose={closeModal}\n        /* eslint-disable-next-line no-alert */ onSettingsClick={() => alert('hi!')} recommendedSharingTooltipCalloutName=\"\" sendInvites={() => fakeRequest().then(() => {\n          closeModal();\n        })} sendInvitesError=\"\" sendSharedLink={() => fakeRequest().then(() => {\n          closeModal();\n        })} sendSharedLinkError=\"\" sharedLink={state.sharedLink} showCalloutForUser showUpgradeOptions submitting={state.submitting} suggestedCollaborators={{\n          '2': {\n            id: '2',\n            userScore: 0.1,\n            name: 'David',\n            email: 'dt@example.com',\n            type: 'user'\n          },\n          '5': {\n            id: '5',\n            userScore: 0.2,\n            name: 'Will',\n            email: 'wy@example.com',\n            type: 'user'\n          },\n          '1': {\n            id: '1',\n            userScore: 0.5,\n            name: 'Jeff',\n            email: 'jt@example.com',\n            type: 'user'\n          },\n          '3': {\n            id: '3',\n            userScore: 2,\n            name: 'Yang',\n            email: 'yz@example.com',\n            type: 'user'\n          }\n        }} trackingProps={{\n          collaboratorListTracking: {},\n          inviteCollabsEmailTracking: {},\n          inviteCollabTracking: {},\n          modalTracking: {},\n          removeLinkConfirmModalTracking: {},\n          sharedLinkEmailTracking: {},\n          sharedLinkTracking: {}\n        }} />}\n                        <Button onClick={() => componentStore.set({\n          isOpen: true\n        })}>\n                            Open USM Modal\n                        </Button>\n                    </div>\n                </IntlProvider>}\n        </State>;\n}"},null===(_withSharedLink$param2=withSharedLink.parameters)||void 0===_withSharedLink$param2||null===(_withSharedLink$param3=_withSharedLink$param2.docs)||void 0===_withSharedLink$param3?void 0:_withSharedLink$param3.source)})}),withAutofocusedSharedLink.parameters=_objectSpread({},withAutofocusedSharedLink.parameters,{docs:_objectSpread({},null===(_withAutofocusedShare=withAutofocusedSharedLink.parameters)||void 0===_withAutofocusedShare?void 0:_withAutofocusedShare.docs,{source:_objectSpread({originalSource:"() => {\n  const componentStore = createComponentStore();\n  const closeModal = () => {\n    componentStore.set({\n      isOpen: false,\n      sharedLink: DEFAULT_SHARED_LINK_STATE,\n      collaboratorsList: {\n        collaborators: []\n      }\n    });\n  };\n  const fakeRequest = () => {\n    // submitting is used to disable input fields, and not to show the loading indicator\n    componentStore.set({\n      submitting: true\n    });\n    return new Promise(resolve => {\n      setTimeout(() => {\n        componentStore.set({\n          submitting: false\n        });\n        resolve();\n      }, 500);\n    });\n  };\n  const getInitialData = () => {\n    const resolveSharedLink = new Promise(resolved => {\n      setTimeout(() => {\n        componentStore.set({\n          sharedLink: {\n            accessLevel: 'peopleInYourCompany',\n            allowedAccessLevels: {\n              peopleWithTheLink: true,\n              peopleInYourCompany: true,\n              peopleInThisItem: true\n            },\n            canChangeAccessLevel: true,\n            enterpriseName: 'Box',\n            expirationTimestamp: 1509173940,\n            isDownloadSettingAvailable: true,\n            permissionLevel: 'canViewDownload',\n            url: 'https://box.com/s/abcdefg'\n          }\n        });\n        resolved();\n      }, 400);\n    });\n    return Promise.all([fakeRequest, resolveSharedLink]);\n  };\n  return <State store={componentStore}>\n            {state => <IntlProvider locale=\"en\">\n                    <div>\n                        {state.isOpen && <UnifiedShareModal canInvite changeSharedLinkAccessLevel={newLevel => {\n          return fakeRequest().then(() => {\n            return componentStore.set({\n              sharedLink: {\n                ...state.sharedLink,\n                accessLevel: newLevel\n              }\n            });\n          });\n        }} changeSharedLinkPermissionLevel={newLevel => {\n          return fakeRequest().then(() => {\n            return componentStore.set({\n              sharedLink: {\n                ...state.sharedLink,\n                permissionLevel: newLevel\n              }\n            });\n          });\n        }} collaboratorsList={state.collaboratorsList} collaborationRestrictionWarning=\"Collaboration invitations can only be sent to people within Box Corporate\" currentUserID=\"0\" focusSharedLinkOnLoad getCollaboratorContacts={() => {\n          return Promise.resolve(contacts);\n        }} getSharedLinkContacts={() => {\n          return Promise.resolve(contacts);\n        }} getInitialData={getInitialData} inviteePermissions={[{\n          default: false,\n          text: 'Co-owner',\n          value: 'Co-owner'\n        }, {\n          default: true,\n          text: 'Editor',\n          value: 'Editor'\n        }, {\n          default: false,\n          text: 'Viewer Uploader',\n          value: 'Viewer Uploader'\n        }, {\n          default: false,\n          text: 'Previewer Uploader',\n          value: 'Previewer Uploader'\n        }, {\n          default: false,\n          text: 'Viewer',\n          value: 'Viewer'\n        }, {\n          default: false,\n          text: 'Previewer',\n          value: 'Previewer'\n        }, {\n          default: false,\n          text: 'Uploader',\n          value: 'Uploader'\n        }]} isOpen={state.isOpen} isToggleEnabled item={state.item} onAddLink={() => {\n          fakeRequest().then(() => {\n            componentStore.set({\n              sharedLink: {\n                accessLevel: 'peopleInYourCompany',\n                allowedAccessLevels: {\n                  peopleWithTheLink: true,\n                  peopleInYourCompany: true,\n                  peopleInThisItem: true\n                },\n                canChangeAccessLevel: true,\n                enterpriseName: 'Box',\n                expirationTimestamp: 1509173940,\n                isDownloadSettingAvailable: true,\n                isNewSharedLink: true,\n                permissionLevel: 'canViewDownload',\n                url: 'https://box.com/s/abcdefg'\n              }\n            });\n          });\n        }} onRemoveLink={() => {\n          fakeRequest().then(() => {\n            componentStore.set({\n              sharedLink: DEFAULT_SHARED_LINK_STATE\n            });\n            closeModal();\n          });\n        }} onRequestClose={closeModal}\n        /* eslint-disable-next-line no-alert */ onSettingsClick={() => alert('hi!')} recommendedSharingTooltipCalloutName=\"\" sendInvites={() => fakeRequest().then(() => {\n          closeModal();\n        })} sendInvitesError=\"\" sendSharedLink={() => fakeRequest().then(() => {\n          closeModal();\n        })} sendSharedLinkError=\"\" sharedLink={state.sharedLink} showCalloutForUser showUpgradeOptions submitting={state.submitting} suggestedCollaborators={{\n          '2': {\n            id: '2',\n            userScore: 0.1,\n            name: 'David',\n            email: 'dt@example.com',\n            type: 'user'\n          },\n          '5': {\n            id: '5',\n            userScore: 0.2,\n            name: 'Will',\n            email: 'wy@example.com',\n            type: 'user'\n          },\n          '1': {\n            id: '1',\n            userScore: 0.5,\n            name: 'Jeff',\n            email: 'jt@example.com',\n            type: 'user'\n          },\n          '3': {\n            id: '3',\n            userScore: 2,\n            name: 'Yang',\n            email: 'yz@example.com',\n            type: 'user'\n          }\n        }} trackingProps={{\n          collaboratorListTracking: {},\n          inviteCollabsEmailTracking: {},\n          inviteCollabTracking: {},\n          modalTracking: {},\n          removeLinkConfirmModalTracking: {},\n          sharedLinkEmailTracking: {},\n          sharedLinkTracking: {}\n        }} />}\n                        <Button onClick={() => componentStore.set({\n          isOpen: true\n        })}>\n                            Open USM Modal\n                        </Button>\n                    </div>\n                </IntlProvider>}\n        </State>;\n}"},null===(_withAutofocusedShare2=withAutofocusedSharedLink.parameters)||void 0===_withAutofocusedShare2||null===(_withAutofocusedShare3=_withAutofocusedShare2.docs)||void 0===_withAutofocusedShare3?void 0:_withAutofocusedShare3.source)})}),withFormOnly.parameters=_objectSpread({},withFormOnly.parameters,{docs:_objectSpread({},null===(_withFormOnly$paramet=withFormOnly.parameters)||void 0===_withFormOnly$paramet?void 0:_withFormOnly$paramet.docs,{source:_objectSpread({originalSource:"() => {\n  const componentStore = createComponentStore();\n  const fakeRequest = () => {\n    // submitting is used to disable input fields, and not to show the loading indicator\n    componentStore.set({\n      submitting: true\n    });\n    return new Promise(resolve => {\n      setTimeout(() => {\n        componentStore.set({\n          submitting: false\n        });\n        resolve();\n      }, 500);\n    });\n  };\n  const getInitialData = () => {\n    const initialPromise = fakeRequest();\n    const fetchCollaborators = new Promise(resolved => {\n      setTimeout(() => {\n        const collaborators = contacts.slice();\n        const collaboratorsList = {\n          collaborators\n        };\n        componentStore.set({\n          collaboratorsList\n        });\n        resolved();\n      }, 1000);\n    });\n    return Promise.all([initialPromise, fetchCollaborators]);\n  };\n  return <State store={componentStore}>\n            {state => <IntlProvider locale=\"en\">\n                    <UnifiedShareModal canInvite changeSharedLinkAccessLevel={newLevel => {\n        return fakeRequest().then(() => {\n          return componentStore.set({\n            sharedLink: {\n              ...state.sharedLink,\n              accessLevel: newLevel\n            }\n          });\n        });\n      }} changeSharedLinkPermissionLevel={newLevel => {\n        return fakeRequest().then(() => {\n          return componentStore.set({\n            sharedLink: {\n              ...state.sharedLink,\n              permissionLevel: newLevel\n            }\n          });\n        });\n      }} collaboratorsList={state.collaboratorsList} collaborationRestrictionWarning=\"Collaboration invitations can only be sent to people within Box Corporate\" currentUserID=\"0\" displayInModal={false} getCollaboratorContacts={() => {\n        return Promise.resolve(contacts);\n      }} getSharedLinkContacts={() => {\n        return Promise.resolve(contacts);\n      }} getInitialData={getInitialData} inviteePermissions={[{\n        default: false,\n        text: 'Co-owner',\n        value: 'Co-owner'\n      }, {\n        default: true,\n        text: 'Editor',\n        value: 'Editor'\n      }, {\n        default: false,\n        text: 'Viewer Uploader',\n        value: 'Viewer Uploader'\n      }, {\n        default: false,\n        text: 'Previewer Uploader',\n        value: 'Previewer Uploader'\n      }, {\n        default: false,\n        text: 'Viewer',\n        value: 'Viewer'\n      }, {\n        default: false,\n        text: 'Previewer',\n        value: 'Previewer'\n      }, {\n        default: false,\n        text: 'Uploader',\n        value: 'Uploader'\n      }]} isOpen={state.isOpen} isToggleEnabled item={state.item} onAddLink={() => {\n        fakeRequest().then(() => {\n          componentStore.set({\n            sharedLink: {\n              accessLevel: 'peopleInYourCompany',\n              allowedAccessLevels: {\n                peopleWithTheLink: true,\n                peopleInYourCompany: true,\n                peopleInThisItem: true\n              },\n              canChangeAccessLevel: true,\n              enterpriseName: 'Box',\n              expirationTimestamp: 1509173940,\n              isDownloadSettingAvailable: true,\n              isNewSharedLink: true,\n              permissionLevel: 'canViewDownload',\n              url: 'https://box.com/s/abcdefg'\n            }\n          });\n        });\n      }} onRemoveLink={() => {\n        fakeRequest().then(() => {\n          componentStore.set({\n            sharedLink: DEFAULT_SHARED_LINK_STATE\n          });\n          console.log('removed link');\n        });\n      }}\n      /* eslint-disable-next-line no-alert */ onSettingsClick={() => alert('hi!')} recommendedSharingTooltipCalloutName=\"\" sendInvites={() => fakeRequest().then(() => {\n        console.log('sent invites');\n      })} sendInvitesError=\"\" sendSharedLink={() => fakeRequest().then(() => {\n        console.log('sent shared link');\n      })} sendSharedLinkError=\"\" sharedLink={state.sharedLink} showCalloutForUser showFormOnly showUpgradeOptions submitting={state.submitting} suggestedCollaborators={{\n        '2': {\n          id: '2',\n          userScore: 0.1,\n          name: 'David',\n          email: 'dt@example.com',\n          type: 'user'\n        },\n        '5': {\n          id: '5',\n          userScore: 0.2,\n          name: 'Will',\n          email: 'wy@example.com',\n          type: 'user'\n        },\n        '1': {\n          id: '1',\n          userScore: 0.5,\n          name: 'Jeff',\n          email: 'jt@example.com',\n          type: 'user'\n        },\n        '3': {\n          id: '3',\n          userScore: 2,\n          name: 'Yang',\n          email: 'yz@example.com',\n          type: 'user'\n        }\n      }} trackingProps={{\n        collaboratorListTracking: {},\n        inviteCollabsEmailTracking: {},\n        inviteCollabTracking: {},\n        modalTracking: {},\n        removeLinkConfirmModalTracking: {},\n        sharedLinkEmailTracking: {},\n        sharedLinkTracking: {}\n      }} />\n                </IntlProvider>}\n        </State>;\n}"},null===(_withFormOnly$paramet2=withFormOnly.parameters)||void 0===_withFormOnly$paramet2||null===(_withFormOnly$paramet3=_withFormOnly$paramet2.docs)||void 0===_withFormOnly$paramet3?void 0:_withFormOnly$paramet3.source)})});const __namedExportsOrder=["basic","withSharedLink","withAutofocusedSharedLink","withFormOnly"];basic.__docgenInfo={description:"",methods:[],displayName:"basic"},withSharedLink.__docgenInfo={description:"",methods:[],displayName:"withSharedLink"},withAutofocusedSharedLink.__docgenInfo={description:"",methods:[],displayName:"withAutofocusedSharedLink"},withFormOnly.__docgenInfo={description:"",methods:[],displayName:"withFormOnly"}},"./src/components/label/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>_Label__WEBPACK_IMPORTED_MODULE_0__.Z});var _Label__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/components/label/Label.tsx");try{label.displayName="label",label.__docgenInfo={description:"",displayName:"label",props:{children:{defaultValue:null,description:"Child for the label",name:"children",required:!0,type:{name:"ReactElement<any, string | JSXElementConstructor<any>>"}},hideLabel:{defaultValue:null,description:"Whether the text of the label should be accessibly hidden",name:"hideLabel",required:!1,type:{name:"boolean"}},infoIconProps:{defaultValue:null,description:"Optional props for the icon",name:"infoIconProps",required:!1,type:{name:"Record<string, any>"}},infoTooltip:{defaultValue:null,description:"Tooltip text for the info icon",name:"infoTooltip",required:!1,type:{name:"ReactNode"}},labelElProps:{defaultValue:null,description:"Optional props for the label element",name:"labelElProps",required:!1,type:{name:'Pick<DetailedHTMLProps<LabelHTMLAttributes<HTMLLabelElement>, HTMLLabelElement>, "key" | keyof LabelHTMLAttributes<HTMLLabelElement>>'}},showOptionalText:{defaultValue:null,description:"Whether to show the `(Optional)` text next to the label for an optional field",name:"showOptionalText",required:!1,type:{name:"boolean"}},text:{defaultValue:null,description:"The label text",name:"text",required:!0,type:{name:"ReactNode"}},tooltip:{defaultValue:null,description:"Optional tooltip text for the label",name:"tooltip",required:!1,type:{name:"ReactNode"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/label/index.tsx#label"]={docgenInfo:label.__docgenInfo,name:"label",path:"src/components/label/index.tsx#label"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/tooltip/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Ar:()=>_Tooltip__WEBPACK_IMPORTED_MODULE_0__.Ar,DU:()=>_Tooltip__WEBPACK_IMPORTED_MODULE_0__.DU,ZP:()=>_Tooltip__WEBPACK_IMPORTED_MODULE_0__.ZP});var _Tooltip__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/components/tooltip/Tooltip.tsx")},"./src/icon/fill/ClearBadge16.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/react/index.js");var _styles_variables__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/styles/variables.js"),_components_accessible_svg_AccessibleSVG__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/accessible-svg/AccessibleSVG.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=typeof t||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==typeof i?i:String(i)}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}const ClearBadge16=props=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_components_accessible_svg_AccessibleSVG__WEBPACK_IMPORTED_MODULE_1__.Z,function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}({width:16,height:16,viewBox:"0 0 16 16"},props,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("path",{fill:_styles_variables__WEBPACK_IMPORTED_MODULE_3__.bdlGray50,fillRule:"evenodd",d:"M7.19 8L4.46 5.27a.572.572 0 01.81-.81L8 7.19l2.73-2.73a.572.572 0 01.81.81L8.81 8l2.73 2.73a.572.572 0 01-.81.81L8 8.81l-2.73 2.73a.572.572 0 01-.81-.81L7.19 8zm5.76 4.95a7 7 0 10-9.9-9.9 7 7 0 009.9 9.9z"})}));ClearBadge16.displayName="ClearBadge16";const __WEBPACK_DEFAULT_EXPORT__=ClearBadge16;try{ClearBadge16.displayName="ClearBadge16",ClearBadge16.__docgenInfo={description:"This is an auto-generated component and should not be edited\nmanually in contributor pull requests.\n\nIf you have problems with this component:\n- https://github.com/box/box-ui-elements/issues/new?template=Bug_report.md\n\nIf there are missing features in this component:\n- https://github.com/box/box-ui-elements/issues/new?template=Feature_request.md",displayName:"ClearBadge16",props:{className:{defaultValue:null,description:"Class for the svg",name:"className",required:!1,type:{name:"string"}},height:{defaultValue:null,description:"Height for the svg",name:"height",required:!1,type:{name:"number"}},role:{defaultValue:null,description:"Accessibility role for the svg",name:"role",required:!1,type:{name:"string"}},title:{defaultValue:null,description:"A text-only string describing the icon if it's not purely decorative for accessibility",name:"title",required:!1,type:{name:"ReactNode"}},viewBox:{defaultValue:null,description:"View box for the svg",name:"viewBox",required:!1,type:{name:"string"}},width:{defaultValue:null,description:"Width for the svg",name:"width",required:!1,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/icon/fill/ClearBadge16.tsx#ClearBadge16"]={docgenInfo:ClearBadge16.__docgenInfo,name:"ClearBadge16",path:"src/icon/fill/ClearBadge16.tsx#ClearBadge16"})}catch(__react_docgen_typescript_loader_error){}},"./src/utils/datetime.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{AY:()=>convertISOStringToUTCDate,HW:()=>isCurrentMonth,gO:()=>isYesterday,kB:()=>convertToDate,lL:()=>isCurrentYear,mr:()=>formatTime,qb:()=>isValidDate,t0:()=>convertToMs,yG:()=>addTime,zJ:()=>convertDateToUnixMidnightTime,zk:()=>isToday});var lodash_isNaN__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/lodash/isNaN.js"),lodash_isNaN__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(lodash_isNaN__WEBPACK_IMPORTED_MODULE_0__);const MILLISECONDS_PER_SECOND=1e3,MILLISECONDS_PER_DAY=86400*MILLISECONDS_PER_SECOND,MILLISECONDS_PER_MINUTE=60*MILLISECONDS_PER_SECOND,RE_ISO8601_DATE=/^(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(\.\d{1,3})?)?((Z$)|(?:[+-](?:([0-2]\d$)|([0-2]\d(?:00|30)$)|([0-2]\d:(?:00|30)$))))$/,ISO8601_DATETIME=1,ISO8601_MILLISECONDS=2,ISO8601_TIMEZONE=3,ISO8601_Z_FMT=4,ISO8601_SHORT_FMT=5,ISO8601_MEDIUM_FMT=6,ISO8601_LONG_FMT=7;function convertToDate(dateValue){return dateValue instanceof Date?dateValue:new Date(dateValue)}function convertToMs(seconds){return seconds*MILLISECONDS_PER_SECOND}function isToday(dateValue){return(new Date).toDateString()===convertToDate(dateValue).toDateString()}function isYesterday(dateValue){return isToday(convertToDate(dateValue).getTime()+MILLISECONDS_PER_DAY)}function isCurrentMonth(dateValue){return(new Date).getMonth()===convertToDate(dateValue).getMonth()}function isCurrentYear(dateValue){return(new Date).getFullYear()===convertToDate(dateValue).getFullYear()}function formatTime(seconds){const h=Math.floor(seconds/3600),m=Math.floor(seconds%3600/60),s=Math.floor(seconds%3600%60),hour=h>0?"".concat(h.toString(),":"):"",sec=s<10?"0".concat(s.toString()):s.toString();let min=m.toString();return h>0&&m<10&&(min="0".concat(min)),"".concat(hour).concat(min,":").concat(sec)}function addTime(dateValue,timeToAdd){return dateValue instanceof Date?new Date(dateValue.getTime()+timeToAdd):dateValue+timeToAdd}function convertDateToUnixMidnightTime(date){return date.getTime()-date.getTimezoneOffset()*MILLISECONDS_PER_MINUTE}function isValidDate(date){return!lodash_isNaN__WEBPACK_IMPORTED_MODULE_0___default()(date.getTime())}function convertISOStringToUTCDate(isoString){const utcDate=new Date(function convertISOStringtoRFC3339String(isoString){if(RE_ISO8601_DATE.test(isoString)){const parseDate=isoString.split(RE_ISO8601_DATE);let dateTime=parseDate[ISO8601_DATETIME];const milliseconds=parseDate[ISO8601_MILLISECONDS],timeZone=parseDate[ISO8601_TIMEZONE];if(milliseconds||(dateTime+=".000"),parseDate[ISO8601_Z_FMT])return isoString;if(parseDate[ISO8601_SHORT_FMT])return"".concat(dateTime+timeZone,":00");if(parseDate[ISO8601_MEDIUM_FMT])return"".concat(dateTime+timeZone.substr(0,3),":").concat(timeZone.substr(3));if(parseDate[ISO8601_LONG_FMT])return isoString}return isoString}(isoString)),utcTime=utcDate.getTime(),timezoneOffsetInMins=utcDate.getTimezoneOffset();return new Date(utcTime+timezoneOffsetInMins*MILLISECONDS_PER_MINUTE)}},"./src/utils/file.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{GS:()=>isBoxNote,_f:()=>getTypedFolderId,mD:()=>getFileExtension,mc:()=>getTypedFileId});var lodash_get__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/lodash/get.js"),lodash_get__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(lodash_get__WEBPACK_IMPORTED_MODULE_0__),_constants__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/constants.js");const FILE_EXT_REGEX=/\.([0-9a-z]+)$/i;function getTypedFileId(id){return"".concat(_constants__WEBPACK_IMPORTED_MODULE_1__.bOi).concat(id)}function getTypedFolderId(id){return"".concat(_constants__WEBPACK_IMPORTED_MODULE_1__.oO3).concat(id)}function isBoxNote(file){return file.extension===_constants__WEBPACK_IMPORTED_MODULE_1__.mX7}function getFileExtension(filename){if("string"!=typeof filename)return"";const result=FILE_EXT_REGEX.exec(filename);return lodash_get__WEBPACK_IMPORTED_MODULE_0___default()(result,"[1]","")}},"./node_modules/lodash/_baseFor.js":(module,__unused_webpack_exports,__webpack_require__)=>{var baseFor=__webpack_require__("./node_modules/lodash/_createBaseFor.js")();module.exports=baseFor},"./node_modules/lodash/_createBaseFor.js":module=>{module.exports=function createBaseFor(fromRight){return function(object,iteratee,keysFunc){for(var index=-1,iterable=Object(object),props=keysFunc(object),length=props.length;length--;){var key=props[fromRight?length:++index];if(!1===iteratee(iterable[key],key,iterable))break}return object}}},"./node_modules/lodash/isNaN.js":(module,__unused_webpack_exports,__webpack_require__)=>{var isNumber=__webpack_require__("./node_modules/lodash/isNumber.js");module.exports=function isNaN(value){return isNumber(value)&&value!=+value}},"./node_modules/lodash/isNumber.js":(module,__unused_webpack_exports,__webpack_require__)=>{var baseGetTag=__webpack_require__("./node_modules/lodash/_baseGetTag.js"),isObjectLike=__webpack_require__("./node_modules/lodash/isObjectLike.js");module.exports=function isNumber(value){return"number"==typeof value||isObjectLike(value)&&"[object Number]"==baseGetTag(value)}},"./node_modules/lodash/isString.js":(module,__unused_webpack_exports,__webpack_require__)=>{var baseGetTag=__webpack_require__("./node_modules/lodash/_baseGetTag.js"),isArray=__webpack_require__("./node_modules/lodash/isArray.js"),isObjectLike=__webpack_require__("./node_modules/lodash/isObjectLike.js");module.exports=function isString(value){return"string"==typeof value||!isArray(value)&&isObjectLike(value)&&"[object String]"==baseGetTag(value)}},"./node_modules/lodash/toFinite.js":(module,__unused_webpack_exports,__webpack_require__)=>{var toNumber=__webpack_require__("./node_modules/lodash/toNumber.js");module.exports=function toFinite(value){return value?Infinity===(value=toNumber(value))||-Infinity===value?17976931348623157e292*(value<0?-1:1):value==value?value:0:0===value?value:0}},"./node_modules/lodash/toInteger.js":(module,__unused_webpack_exports,__webpack_require__)=>{var toFinite=__webpack_require__("./node_modules/lodash/toFinite.js");module.exports=function toInteger(value){var result=toFinite(value),remainder=result%1;return result==result?remainder?result-remainder:result:0}}}]);